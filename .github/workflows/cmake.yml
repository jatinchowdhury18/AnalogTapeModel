name: CI

on:
  push:
    branches:
    - master
    - develop
  pull_request:
    branches:
    - master
    - develop

  workflow_dispatch:

env:
  BUILD_FOLDER: 

jobs:
  build_and_test:
    if: contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Test module on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
        - os: windows-latest
          env:
            BUILD_FOLDER: VisualStudio2017
            PROJUCER: ${{github.workspace}}/Plugin/JUCE/extras/Projucer/Builds/VisualStudio2017/x64/Debug/App/Projucer.exe"
            OS: win
        - os: ubuntu-latest
          env:
            BUILD_FOLDER: LinuxMakefile
            PROJUCER: ${{github.workspace}}/Plugin/Juce/extras/Projucer/Builds/LinuxMakefile/build/Projucer"
            OS: linux
        - os: macos-latest
          env:
            BUILD_FOLDER: MacOSX
            PROJUCER: ${{github.workspace}}/Plugin/JUCE/extras/Projucer/Builds/MacOSX/build/Debug/Projucer.app/Contents/MacOS/Projucer"
            OS: osx
    
    steps:
    - name: Install Linux Deps
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt install libasound2-dev libcurl4-openssl-dev libx11-dev libxinerama-dev libxext-dev libfreetype6-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9

    - name: Get latest CMake
      uses: lukka/get-cmake@latest 

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Add MSBuild to PATH
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v1

    - name: Build Projucer
      if: runner.os == 'Linux'
      working-directory: ${{github.workspace}}/Plugin/Juce/extras/Projucer/Builds/${{env.BUILD_FOLDER}}
      run: make

    - name: Build Projucer
      if: runner.os == 'MacOS'
      working-directory: ${{github.workspace}}/Plugin/Juce/extras/Projucer/Builds/${{env.BUILD_FOLDER}}
      run: xcodebuild -project Projucer.xcodeproj > /dev/null

    - name: Build Projucer
      if: runner.os == 'Windows'
      working-directory: ${{github.workspace}}/Plugin/Juce/extras/Projucer/Builds/${{env.BUILD_FOLDER}}
      run: msbuild.exe -v:quiet Projucer.sln

    - name: Resave
      run: |
        ${{env.PROJUCER}} --set-global-search-path ${{env.OS}} defaultJuceModulePath ${{github.workspace}}/Plugin/Juce/modules
        ${{env.PROJUCER}} --set-global-search-path ${{env.OS}} vstLegacyPath ${{github.workspace}}/Plugin/Juce/VST2_SDK
        ${{env.PROJUCER}} --resave Plugin/CHOWTapeModel.jucer

    - name: Build
      if: runner.os == 'Linux'
      working-directory: ${{github.workspace}}/Plugin
      run: bash build_linux.sh
      
    - name: Build
      if: runner.os == 'MacOS'
      working-directory: ${{github.workspace}}/Plugin/Builds/${{env.BUILD_FOLDER}}
      run: |
        xcodebuild -project CHOWTapeModel.xcodeproj/ clean
        xcodebuild -project CHOWTapeModel.xcodeproj/ -configuration Release

    - name: Build
      if: runner.os == 'Windows'
      working-directory: ${{github.workspace}}/Plugin/Builds/${{env.BUILD_FOLDER}}
      run: msbuild.exe -v:normal CHOWTapeModel.sln

    # - name: Validate
    #   run: bash validate.sh
